//PROCESS MANAGER MODULE

alias functionNum R1; //retriving the function number
alias currentPID R2; //PID of current process

if(functionNum==2) then //Free user area page
	alias userAreaPageNo R3;
	userAreaPageNo=[PROCESS_TABLE + currentPID*16 + 11];

	multipush(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);
	R1=2;
	R2=userAreaPageNo;
	call MOD_2;
	multipop(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);
	return;

endif;

if(functionNum==3) then //Exit process

	//Free page table Entries
	multipush(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);
	R1=4;
	R2=currentPID;
	call MOD_1;
	multipop(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);

	//Free User area page
	multipush(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);
	R1=2;
	R2=currentPID;
	call MOD_1;
	multipop(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);

	[PROCESS_TABLE+16*currentPID+4]=TERMINATED;
	return;

endif;

if(functionNum==4) then //Free page table function
	
	PTBR=PAGE_TABLE_BASE+currentPID*20;

	//Invalidating Library Pages
	[PTBR+0]=-1;
	[PTBR+1]="0000";
	[PTBR+2]=-1;
	[PTBR+3]="0000";

	multipush(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);
		alias p R7;
		p=4;
		while(p<20) do
			if([PTBR+p]!=-1) then

				multipush(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);
				R1=2;
				R2=[PTBR+p];
				call MOD_2;
				multipop(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);

				[PTBR+p]=-1;
				[PTBR+p+1]="0000";
			endif;
			p=p+2;
		endwhile;

	multipop(R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15);

	return;
endif;