
////////BOOT MODULE//////////

//library code
loadi(63,13);
loadi(64,14);

//timer interrupt
loadi(4,17);
loadi(5,18);

//disk interrupt
loadi(6,19);
loadi(7,20);

//console interrupt
loadi(8,21);
loadi(9,22);

//INT6
loadi(14,27);
loadi(15,28);

//INT7
loadi(16,29);
loadi(17,30);

//INT8
loadi(18,31);
loadi(19,32);

//INT9
loadi(20,33);
loadi(21,34);

//INT10
loadi(22,35);
loadi(23,36);

//disk free list
loadi(61,2);

//init code
loadi(65,7);
loadi(66,8);

//exhandler
loadi(2,15);
loadi(3,16);

//module_0
loadi(40,53);
loadi(41,54);

//module_1
loadi(42,55);
loadi(43,56);

//module_2
loadi(44,57);
loadi(45,58);

//module_4
loadi(48,61);
loadi(49,62);

//inode table
loadi(59,3);
loadi(60,4);


//page table entries for init process
PTBR = PAGE_TABLE_BASE + 20;
PTLR=10;

//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//code
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

//process table entries for init process
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = 10;

[76*512] = [65*512 + 1]; //entry point for init process



//all other processes initially terminated
multipush (R0);
alias count R0;
count = 2;

while(count < 16) do
	[PROCESS_TABLE + count*16 + 4] = TERMINATED;
	count = count + 1;
endwhile;
multipop (R0);

[TERMINAL_STATUS_TABLE] = 0;  //setting terminal as free initially
[DISK_STATUS_TABLE] = 0;	//set disk as free

multipush (R0);
count = 0;
while (count < 128) do 	//initialize mem free list
	if (count < 83) then
		[MEMORY_FREE_LIST + count] = 1;
	else
		[MEMORY_FREE_LIST + count] = 0;
	endif;
	count = count + 1;
endwhile;

[SYSTEM_STATUS_TABLE + 2] = 45;	//initial mem_free_count = 45
[SYSTEM_STATUS_TABLE + 3] = 0;	//initial mem_wait_count = 0
multipop (R0);

//disk map table of init process
[DISK_MAP_TABLE + 0] = -1;
[DISK_MAP_TABLE + 2] = -1;
[DISK_MAP_TABLE + 3] = -1;
[DISK_MAP_TABLE + 4] = 7;
[DISK_MAP_TABLE + 5] = 8;
[DISK_MAP_TABLE + 6] = -1;
[DISK_MAP_TABLE + 7] = -1;
[DISK_MAP_TABLE + 8] = -1;
[DISK_MAP_TABLE + 9] = -1;

//Setting up per-process resource table in last 16 words of user area page
backup;
count=496;
while(count<=511) do
	[[PROCESS_TABLE + 16 + 11]*512+count]=-1;
	count=count+2;
endwhile;
restore;
//Initially per process resource table is empty


return;